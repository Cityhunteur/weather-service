// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	weathergov "github.com/cityhunteur/weather-service/internal/pkg/weathergov"
)

// WeatherGovAPI is an autogenerated mock type for the WeatherGovAPI type
type WeatherGovAPI struct {
	mock.Mock
}

// GetForecast provides a mock function with given fields: ctx, forecastURL
func (_m *WeatherGovAPI) GetForecast(ctx context.Context, forecastURL string) (*weathergov.Forecast, error) {
	ret := _m.Called(ctx, forecastURL)

	var r0 *weathergov.Forecast
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*weathergov.Forecast, error)); ok {
		return rf(ctx, forecastURL)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *weathergov.Forecast); ok {
		r0 = rf(ctx, forecastURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*weathergov.Forecast)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, forecastURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPoints provides a mock function with given fields: ctx, coord
func (_m *WeatherGovAPI) GetPoints(ctx context.Context, coord *weathergov.Coordinates) (*weathergov.Points, error) {
	ret := _m.Called(ctx, coord)

	var r0 *weathergov.Points
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *weathergov.Coordinates) (*weathergov.Points, error)); ok {
		return rf(ctx, coord)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *weathergov.Coordinates) *weathergov.Points); ok {
		r0 = rf(ctx, coord)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*weathergov.Points)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *weathergov.Coordinates) error); ok {
		r1 = rf(ctx, coord)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewWeatherGovAPI creates a new instance of WeatherGovAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWeatherGovAPI(t interface {
	mock.TestingT
	Cleanup(func())
}) *WeatherGovAPI {
	mock := &WeatherGovAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
